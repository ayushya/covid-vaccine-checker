{"version":3,"sources":["utility.js","FilterOptions.js","App.js","reportWebVitals.js","index.js","constants.js"],"names":["GET_CENTERS_BY_DISTRICT","require","fetchCenters","districtList","month","a","promiseList","districtIndex","length","week","centerRequest","axios","get","params","district_id","date","moment","add","format","then","response","data","centers","push","Promise","all","allCentersList","allCenters","reduce","prev","curr","formatData","newCenters","newVaccines","Set","newAgeGroups","modifiedCenters","map","centerItem","availability","total","sessions","forEach","item","minAgeLimit","min_age_limit","availableNow","available_capacity","vaccineName","vaccine","vaccineTotalKey","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","FilterOptions","props","classes","states","setStates","stateSelected","setStateSelected","districts","setDistricts","districtSelected","setDistrictSelected","setRawCenters","setCenters","vaccines","setVaccines","vaccineSelected","setVaccineSelected","ageGroup","setAgeGroup","ageGroupSelected","setAgeGroupSelected","durationSelected","setDurationSelected","useEffect","GET_STATES","FormControl","variant","className","InputLabel","id","Select","labelId","value","onChange","event","newStateSelectedValue","target","GET_DISTRICTS","label","MenuItem","index","state_id","state_name","newDistrictSelectedValue","resolve","rawCenterData","district_name","Array","from","ageGroupItem","App","React","useState","rawCenters","DEFAULT_VACCINE","DEFAULT_AGE","DEFAULT_DURATION","propsToPass","dateMap","apply","parseInt","quantityFormatter","undefined","quantityStyle","commonStyles","textAlign","fontWeight","border","color","backgroundColor","style","height","width","defaultColDef","floatingFilter","resizable","defaultColGroupDef","marryChildren","animateRows","isExternalFilterPresent","doesExternalFilterPass","node","rowData","field","sortable","filter","pinned","headerName","valueFormatter","cellStyle","sort","dateItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","SERVER_API_URL"],"mappings":"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","file":"static/js/main.05f417de.chunk.js","sourcesContent":["import axios from 'axios';\nimport moment from 'moment';\n\nconst { GET_CENTERS_BY_DISTRICT } = require(\"./constants\");\n\nexport const fetchCenters = async (districtList, month) => {\n  const promiseList = [];\n\n  for(let districtIndex = 0; districtIndex < districtList.length; districtIndex++) {\n    for(let week = 0; week < 4*month; week++) {\n      const centerRequest = axios.get(`${GET_CENTERS_BY_DISTRICT}`, {\n          params: {\n          district_id: districtList[districtIndex],\n          date: moment().add(week, 'days').format('DD-MM-YYYY')\n          }\n        })\n        .then((response) => response.data.centers);\n        promiseList.push(centerRequest);\n    }\n  }\n\n  const allCentersList = await Promise.all(promiseList);\n  const allCenters = allCentersList.reduce((prev, curr) => [...prev, ...curr], []);\n\n  return formatData(allCenters);\n}\n\nconst formatData = (newCenters) => {\n  const newVaccines = new Set();\n  const newAgeGroups = new Set();\n\n  const modifiedCenters = newCenters.map((centerItem) => {\n    let availability = {\n      total: 0,\n    };\n\n    centerItem.sessions.forEach(item => {\n      const minAgeLimit = item.min_age_limit;\n      const availableNow = item.available_capacity;\n      const vaccineName = item.vaccine;\n\n      newVaccines.add(vaccineName);\n      newAgeGroups.add(minAgeLimit);\n\n      availability[minAgeLimit] = {\n        ...availability[minAgeLimit],\n        [vaccineName]: {\n          ...(availability[minAgeLimit]?.[vaccineName]),\n          [item.date]: availableNow,\n        },\n      }\n\n      const vaccineTotalKey = `${vaccineName}_total`;\n      availability[minAgeLimit][vaccineTotalKey] = availability[minAgeLimit][vaccineTotalKey] ? availability[minAgeLimit][vaccineTotalKey] + availableNow : availableNow;\n      availability.total += availableNow;\n    });\n    centerItem['availability'] = availability;\n    return centerItem;\n  });\n\n  return [newCenters, newVaccines, newAgeGroups, modifiedCenters];\n}","import React, { useEffect } from 'react';\n\nimport axios from 'axios';\n\nimport { makeStyles } from '@material-ui/core';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nimport {\n  GET_DISTRICTS,\n  GET_STATES,\n} from './constants';\nimport { fetchCenters } from './utility';\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst FilterOptions = (props) => {\n  const classes = useStyles();\n  \n  const {\n    states, setStates,\n    stateSelected, setStateSelected,\n    districts, setDistricts,\n    districtSelected, setDistrictSelected,\n    setRawCenters,\n    setCenters,\n    vaccines, setVaccines,\n    vaccineSelected, setVaccineSelected,\n    ageGroup, setAgeGroup,\n    ageGroupSelected, setAgeGroupSelected,\n    durationSelected, setDurationSelected\n  } = props;\n\n  useEffect(() => {\n    axios.get(GET_STATES)\n      .then((response) => {\n        setStates(response.data.states);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleStateChange = (event) => {\n    const newStateSelectedValue = event.target.value;\n    setStateSelected(newStateSelectedValue);\n    setDistricts(null);\n    axios.get(`${GET_DISTRICTS}/${newStateSelectedValue}`)\n      .then((response) => {\n        setDistricts(response.data.districts);\n      });\n  };\n\n  const handleDistrictChange = (event) => {\n    const newDistrictSelectedValue = event.target.value;\n    setDistrictSelected(newDistrictSelectedValue);\n    new Promise(async (resolve) => {\n      const [rawCenterData, newVaccines, newAgeGroups, modifiedCenters] = await fetchCenters([newDistrictSelectedValue], durationSelected);\n      setRawCenters(rawCenterData);\n      setVaccines(newVaccines);\n      setAgeGroup(newAgeGroups);\n      setCenters(modifiedCenters);\n      resolve();\n    })\n  };\n\n  const handleVaccineChange = (event) => {\n    const newStateSelectedValue = event.target.value;\n    setVaccineSelected(newStateSelectedValue);\n  };\n\n  const handleAgeGroupChange = (event) => {\n    const newStateSelectedValue = event.target.value;\n    setAgeGroupSelected(newStateSelectedValue);\n  }\n\n  const handleDurationChange = (event) => {\n    const newStateSelectedValue = event.target.value;\n    setDurationSelected(newStateSelectedValue);\n  }\n\n  return (\n    <div>\n      <FormControl variant=\"outlined\" className={classes.formControl}>\n        <InputLabel id=\"demo-simple-select-outlined-label\">States</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-outlined-label\"\n          id=\"demo-simple-select-outlined\"\n          value={stateSelected}\n          onChange={handleStateChange}\n          label=\"State\"\n        >\n          <MenuItem value=\"\">\n            <em>None</em>\n          </MenuItem>\n          {\n            states?.map(({ state_id, state_name }, index) => <MenuItem key={index} value={state_id}>{state_name}</MenuItem>)\n          }\n        </Select>\n      </FormControl>\n      {\n        districts ?\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Districts</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={districtSelected}\n              onChange={handleDistrictChange}\n              label=\"Districts\"\n            >\n              {\n                districts?.map(({ district_id, district_name }, index) => <MenuItem key={index} value={district_id}>{district_name}</MenuItem>)\n              }\n            </Select>\n          </FormControl> :\n          null\n      }\n      {\n        vaccines ?\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Vaccines</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={vaccineSelected}\n              onChange={handleVaccineChange}\n              label=\"Vaccines\"\n            >\n              {\n                Array.from(vaccines)?.map((vaccine, index) => <MenuItem key={index} value={vaccine}>{vaccine}</MenuItem>)\n              }\n            </Select>\n          </FormControl> :\n          null\n      }\n      {\n        ageGroup ?\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Age Group</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={ageGroupSelected}\n              onChange={handleAgeGroupChange}\n              label=\"Age Group\"\n            >\n              {\n                Array.from(ageGroup)?.map((ageGroupItem, index) => <MenuItem key={index} value={ageGroupItem}>{ageGroupItem}</MenuItem>)\n              }\n            </Select>\n          </FormControl> :\n          null\n      }\n      {\n        vaccines && ageGroup ?\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n            <InputLabel id=\"demo-simple-select-outlined-label\">Duration</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-outlined-label\"\n              id=\"demo-simple-select-outlined\"\n              value={durationSelected}\n              onChange={handleDurationChange}\n              label=\"Duration\"\n            >\n              <MenuItem value=\"1\">1 Month</MenuItem>\n              <MenuItem value=\"2\">2 Month</MenuItem>\n            </Select>\n          </FormControl> :\n          null\n      }\n    </div>\n  )\n}\n\nexport default FilterOptions;","import 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\n\nimport React from 'react';\n\nimport {\n  AgGridColumn,\n  AgGridReact,\n} from 'ag-grid-react';\nimport moment from 'moment';\n\nimport {\n  DEFAULT_AGE,\n  DEFAULT_DURATION,\n  DEFAULT_VACCINE,\n} from './constants';\nimport FilterOptions from './FilterOptions';\n\nconst App = () => {\n  const [states, setStates] =  React.useState(null);\n  const [stateSelected, setStateSelected] = React.useState('');\n  const [districts, setDistricts] = React.useState(null);\n  const [districtSelected, setDistrictSelected] = React.useState('');\n  const [rawCenters, setRawCenters] = React.useState(null);\n  const [centers, setCenters] = React.useState(null);\n\n  const [vaccines, setVaccines] = React.useState(null);\n  const [vaccineSelected, setVaccineSelected] = React.useState(DEFAULT_VACCINE);\n\n  const [ageGroup, setAgeGroup] = React.useState(null);\n  const [ageGroupSelected, setAgeGroupSelected] = React.useState(DEFAULT_AGE);\n\n  const [durationSelected, setDurationSelected] = React.useState(DEFAULT_DURATION);\n\n  const propsToPass = {\n    states, setStates,\n    stateSelected, setStateSelected,\n    districts, setDistricts,\n    districtSelected, setDistrictSelected,\n    rawCenters, setRawCenters,\n    centers, setCenters,\n    vaccines, setVaccines,\n    vaccineSelected, setVaccineSelected,\n    ageGroup, setAgeGroup,\n    ageGroupSelected, setAgeGroupSelected,\n    durationSelected, setDurationSelected\n  };\n\n  const dateMap = Array.apply(null, new Array(7 * 4 * parseInt(durationSelected))).map((curr, index) => {\n    return moment().add(index, 'days').format('DD-MM-YYYY');\n  });\n\n  const rowDataFilter = (node) => {\n    const total  = node.data.availability[ageGroupSelected]?.[`${vaccineSelected}_total`];\n    return total !== undefined\n  }\n\n  const quantityFormatter = ({value}) => {\n    switch (value) {\n      case undefined: {\n        return 'NA';\n      }\n      case 0: {\n        return 'Booked';\n      }\n      default: {\n        return value;\n      }\n    }\n  }\n\n  const quantityStyle = ({ value }) => {\n    const commonStyles = {\n      textAlign: 'center',\n      fontWeight: '700',\n      border: '1px solid rgb(186, 191, 199)'\n    };\n    switch (value) {\n      case undefined: {\n        return { color: 'rgba(0, 0, 0, 0.87)', backgroundColor: '#e0e0e0', ...commonStyles };\n      }\n      case 0: {\n        return { color: '#fff', backgroundColor: 'rgb(220, 0, 78)', ...commonStyles };\n      }\n      default: {\n        return { color: '#fff', backgroundColor: '#2ecc71', ...commonStyles };\n      }\n    }\n  }\n\n  return (\n    <div>\n      <FilterOptions {...propsToPass}/>\n      {\n        centers?.length ?\n          <div className=\"ag-theme-alpine\" style={{ height: 'calc(100vh - 72px)', width: '100%' }}>\n            <AgGridReact   \n              defaultColDef={{\n                width: 120,\n                // editable: true,\n                // filter: 'agTextColumnFilter',\n                floatingFilter: true,\n                resizable: true,\n              }}\n              defaultColGroupDef={{ marryChildren: true }}\n              animateRows={true}\n              isExternalFilterPresent={() => true}\n              doesExternalFilterPass={rowDataFilter}\n              rowData={centers}>\n              <AgGridColumn field=\"pincode\" sortable={true} filter={true} pinned=\"left\"></AgGridColumn>\n              <AgGridColumn field=\"name\" sortable={true} filter={true} width={200} pinned=\"left\"></AgGridColumn>\n              <AgGridColumn headerName=\"Fee\" field=\"fee_type\" sortable={true} filter={true} pinned=\"left\"></AgGridColumn>\n              <AgGridColumn\n                headerName=\"# Total\"\n                field={`availability.${ageGroupSelected}.${vaccineSelected}_total`}\n                sortable={true}\n                filter={false}\n                width={120}\n                pinned=\"left\"\n                valueFormatter={quantityFormatter}\n                cellStyle={quantityStyle}\n                sort={'desc'}\n              />\n              {\n                dateMap?.map((dateItem, index) =>\n                  <AgGridColumn\n                    key={index}\n                    headerName={dateItem}\n                    field={`availability.${ageGroupSelected}.${vaccineSelected}.${dateItem}`}\n                    sortable={true}\n                    filter={false}\n                    width={130}\n                    valueFormatter={quantityFormatter}\n                    cellStyle={quantityStyle}\n                  />\n                )\n              }\n            </AgGridReact>\n          </div> :\n          null\n      }\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export const SERVER_API_URL = 'https://cdn-api.co-vin.in/api/v2';\n\nexport const GET_STATES = `${SERVER_API_URL}/admin/location/states`;\n\nexport const GET_DISTRICTS = `${SERVER_API_URL}/admin/location/districts`;\n\nexport const GET_CENTERS_BY_DISTRICT = `${SERVER_API_URL}/appointment/sessions/public/calendarByDistrict`;\n\nexport const DEFAULT_VACCINE = 'COVAXIN';\n\nexport const DEFAULT_AGE = 18;\n\nexport const DEFAULT_DURATION = 1;\n"],"sourceRoot":""}